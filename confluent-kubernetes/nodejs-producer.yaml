apiVersion: v1
kind: Secret
metadata:
  name: kafka-client-config
  namespace: confluent
type: Opaque
data:
  kafka.properties: Ym9vdHN0cmFwLnNlcnZlcnM9a2Fma2EuY29uZmx1ZW50LnN2Yy5jbHVzdGVyLmxvY2FsOjkwNzEKc2VjdXJpdHkucHJvdG9jb2w9UExBSU5URVhU
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: nodejs
spec:
  serviceName: nodejs
  podManagementPolicy: Parallel
  replicas: 1
  selector:
    matchLabels:
      app: nodejs
  template:
    metadata:
      labels:
        app: nodejs
    spec:
      containers:
      - name: nodejs
        image: nurihaji/kafka-nodejs:latest
        volumeMounts:
        - name: kafka-properties
          mountPath: /mnt
          readOnly: true
        resources:
          requests:
            memory: 512Mi # 768Mi
            cpu: 500m # 1000m
      volumes:
        - name: kafka-properties # Create secret with name `kafka-client-config` with client configurations
          secret:
            secretName: kafka-client-config
---
apiVersion: v1
kind: Service
metadata:
  name: nodejs
spec:
  selector:
    app: nodejs
  clusterIP: None
  ports:
    - protocol: TCP
      port: 8080
---
apiVersion: platform.confluent.io/v1beta1
kind: KafkaTopic
metadata:
  name: nodejs-0
  namespace: confluent
spec:
  replicas: 3
  partitionCount: 2
  configs:
    cleanup.policy: "delete"
---
apiVersion: platform.confluent.io/v1beta1
kind: KafkaTopic
metadata:
  name: users
  namespace: confluent
spec:
  replicas: 3
  partitionCount: 2
  configs:
    cleanup.policy: "delete"    